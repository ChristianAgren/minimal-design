{"version":3,"sources":["resources/SVG/logotype_bright.svg","contexts/theme.context.js","contexts/res.context.js","components/header.logotype.js","components/menu.js","components/menu-item.js","components/header.search-bar.js","layout/header.js","layout/main.js","layout/footer.js","App.js","serviceWorker.js","contexts/theme.context.provider.js","contexts/res.context.provider.js","index.js"],"names":["module","exports","theme","dark","bright","accentPink","accentYellow","accentBlue","titleDark","textSizes","large","medium","small","ThemeContext","React","createContext","sizes","mobile","tablet","desktop","devices","ResponsiveContext","LogotypeImg","styled","img","Logotype","src","Logo","alt","horizontal","css","vertical","Menu","ul","props","direction","MenuItem","li","StyledSearchbar","input","SearchbarWrapper","div","SearchbarIcon","FontAwesomeIcon","Searchbar","placeholder","icon","faSearch","HeaderBase","HeaderWrapper","BarsIcon","Header","useContext","width","faBars","StyledMain","Main","children","StyledFooter","Footer","App","Boolean","window","location","hostname","match","ThemeContextProvider","Provider","value","ResponsiveContextProvider","useState","setWidth","useLayoutEffect","updateWidth","innerWidth","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,6C,2JCE9BC,EAAQ,CACjBC,KAAM,UACNC,OAAQ,UACRC,WAAY,UACZC,aAAc,UACdC,WAAY,UACZC,UAAW,WAGFC,EAAY,CACrBC,MAAO,UACPC,OAAQ,UACRC,MAAO,WAGEC,EAAeC,IAAMC,cAC9Bb,EACAO,GCjBSO,EAAQ,CACjBC,OAAQ,IACRC,OAAQ,KACRC,QAAS,MAGAC,EAAU,CACnBH,OAAO,eAAD,OAAiBD,EAAMC,OAAvB,KACNC,OAAO,eAAD,OAAiBF,EAAME,OAAvB,KACNC,QAAQ,eAAD,OAAiBH,EAAMG,QAAvB,MAGEE,EAAoBP,IAAMC,cACnCC,EACAI,EACA,G,4KCbJ,IAMME,EAAcC,IAAOC,IAAV,KAOFC,EAbE,WACb,OACI,kBAACH,EAAD,CAAaI,IAAKC,IAAMC,IAAI,sB,6cCJpC,IAAMC,EAAaC,YAAH,KASVC,EAAWD,YAAH,KAYCE,EAPFT,IAAOU,GAAV,KACJ,SAAAC,GAAK,MAAwB,eAApBA,EAAMC,WAA8BN,KAC7C,SAAAK,GAAK,MAAwB,aAApBA,EAAMC,WAA4BJ,K,2MChBjD,IAQeK,EAREb,IAAOc,GAAV,K,8yBCGd,IAAMC,EAAkBf,IAAOgB,MAAV,KAYG,SAAAL,GAAK,OAAIA,EAAMhC,MAAMM,aAChC,SAAA0B,GAAK,OAAIA,EAAMhC,MAAME,UAGjB,SAAA8B,GAAK,OAAIA,EAAMhC,MAAME,UAKhCoC,EAAmBjB,IAAOkB,IAAV,KAShBC,EAAgBnB,YAAOoB,IAAPpB,CAAH,KAgBJqB,EATG,SAACV,GACf,OACI,kBAACM,EAAD,KACI,kBAACF,EAAD,CAAiBpC,MAAOgC,EAAMhC,MAAO2C,YAAY,cACjD,kBAACH,EAAD,CAAeI,KAAMC,Q,ioBCnCjC,IAAMC,EAAazB,IAAOkB,IAAV,KAeVQ,EAAgB1B,IAAOkB,IAAV,KASR,SAACP,GAAD,OAAWA,EAAMhC,MAAME,UAG5B8C,EAAW3B,YAAOoB,IAAPpB,CAAH,KAgCC4B,EAzBA,WAAO,IACVjD,EAAUkD,qBAAWvC,GAArBX,MADS,EAEQkD,qBAAW/B,GAA5BL,EAFS,EAETA,MAAOqC,EAFE,EAEFA,MAEf,OACI,kBAACL,EAAD,KACI,kBAACC,EAAD,CAAe/C,MAAOA,GAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMiC,UAAU,cACZ,kBAAC,EAAD,CAAWjC,MAAOA,IACjBmD,EAAQrC,EAAMC,QACX,oCACI,kBAAC,EAAD,mBACA,kBAAC,EAAD,eAGPoC,GAASrC,EAAMC,QACZ,kBAACiC,EAAD,CAAUJ,KAAMQ,U,mJC3DxC,IAAMC,EAAahC,IAAOkB,IAAV,KAeDe,EARF,SAACtB,GACV,OACI,kBAACqB,EAAD,KACKrB,EAAMuB,W,4ICVnB,IAAMC,EAAenC,IAAOkB,IAAV,KAcHkB,EARA,SAACzB,GACZ,OACI,kBAACwB,EAAD,KACMxB,EAAMuB,WCCLG,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCfN,IAYeC,EAZc,SAAChC,GAC1B,OACG,kBAACrB,EAAasD,SAAd,iBACKjC,EADL,CAECkC,MAAO,CACHlE,QACAO,iB,QCuBG4D,EA7BmB,SAACnC,GAAW,IAAD,EACboC,mBAAS,GADI,mBACjCjB,EADiC,KAC1BkB,EAD0B,KAiBzC,OAdAC,2BAAgB,WACZ,IAAMC,EAAc,WACZpB,IAAUS,OAAOY,YACjBH,EAAST,OAAOY,aAMxB,OAHAZ,OAAOa,iBAAiB,SAAUF,GAClCA,IAEO,WACHX,OAAOc,oBAAoB,SAAUH,OAKzC,kBAACpD,EAAkB8C,SAAnB,iBACIjC,EADJ,CAEAkC,MAAO,CACHpD,QACAI,UACAiC,aClBZwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,SAINC,SAASC,eAAe,SHmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30fbdc48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotype_bright.2eedb889.svg\";","import React from 'react'\r\n\r\nexport const theme = {\r\n    dark: \"#4a4b58\",\r\n    bright: \"#f9fdff\",\r\n    accentPink: \"#ee75ab\",\r\n    accentYellow: \"#f5d284\",\r\n    accentBlue: \"#7fccdd\",\r\n    titleDark: \"#28292d\"\r\n}\r\n\r\nexport const textSizes = {\r\n    large: \"63.54px\",\r\n    medium: \"39.26px\",\r\n    small: \"24.27px\",\r\n}\r\n\r\nexport const ThemeContext = React.createContext(\r\n    theme,\r\n    textSizes\r\n)","import React from 'react'\r\n\r\nexport const sizes = {\r\n    mobile: 640,\r\n    tablet: 1024,\r\n    desktop: 1440\r\n}\r\n\r\nexport const devices = {\r\n    mobile: `(min-width: ${sizes.mobile})`,\r\n    tablet: `(min-width: ${sizes.tablet})`,\r\n    desktop: `(min-width: ${sizes.desktop})`\r\n}\r\n\r\nexport const ResponsiveContext = React.createContext(\r\n    sizes,\r\n    devices,\r\n    0\r\n)","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Logo from \"../resources/SVG/logotype_bright.svg\"\r\n\r\nconst Logotype = () => {\r\n    return (\r\n        <LogotypeImg src={Logo} alt=\"minimal_logotype\" />\r\n    )\r\n}\r\n\r\nconst LogotypeImg = styled.img`\r\n    width: 152px;\r\n    height: 38px;\r\n    padding: 0px 18px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport default Logotype","import styled, { css } from 'styled-components'\r\n\r\nconst horizontal = css`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n\r\n    & > li {\r\n        padding: 6px 18px 6px 18px;\r\n    }\r\n`\r\nconst vertical = css`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst Menu = styled.ul`\r\n    ${props => props.direction === \"horizontal\" && horizontal};\r\n    ${props => props.direction === \"vertical\" && vertical};\r\n    list-style: none;\r\n    width: 100%;\r\n`\r\n\r\nexport default Menu","import styled from 'styled-components'\r\n\r\nconst MenuItem = styled.li`\r\n    font-family: 'Alata', sans-serif;\r\n    font-size: 18px;\r\n    line-height: 1.2;\r\n    cursor: pointer;\r\n    padding-bottom: 8px;\r\n`\r\n\r\nexport default MenuItem","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst StyledSearchbar = styled.input`\r\n    width: 100%;\r\n    max-width: 20rem;\r\n    height: 2rem;\r\n    border: none;\r\n    border-radius: 3px;\r\n    padding: 4px 26px 4px 12px;\r\n    margin: 0 18px;\r\n\r\n    font-family: 'Alata', sans-serif;\r\n    font-size: 18px;\r\n    \r\n    background-color: ${props => props.theme.titleDark};\r\n    color: ${props => props.theme.bright};\r\n    \r\n    ::placeholder {\r\n        color: ${props => props.theme.bright};\r\n        opacity: .6;\r\n    }\r\n`\r\n\r\nconst SearchbarWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: calc(20rem + 36px);\r\n`\r\n\r\nconst SearchbarIcon = styled(FontAwesomeIcon)`\r\n    position: absolute;\r\n    right: 24px;\r\n    opacity: .6;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Searchbar = (props) => {\r\n    return (\r\n        <SearchbarWrapper>\r\n            <StyledSearchbar theme={props.theme} placeholder=\"search...\"></StyledSearchbar>\r\n            <SearchbarIcon icon={faSearch} />\r\n        </SearchbarWrapper>\r\n    )\r\n}\r\n\r\nexport default Searchbar","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ThemeContext } from \"../contexts/theme.context\";\r\nimport { ResponsiveContext } from \"../contexts/res.context\"\r\nimport Logotype from \"../components/header.logotype\";\r\nimport Menu from \"../components/menu\";\r\nimport MenuItem from \"../components/menu-item\";\r\nimport Searchbar from \"../components/header.search-bar\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderBase = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 3;\r\n\r\n  height: 4rem;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  background-color: #4a4b58;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 90rem;\r\n  height: 100%;\r\n  padding: 0 6px;\r\n\r\n  color: ${(props) => props.theme.bright};\r\n`;\r\n\r\nconst BarsIcon = styled(FontAwesomeIcon)`\r\n    width: 1rem;\r\n    height: 1rem;\r\n    margin: 18px 18px 18px 6px;\r\n    cursor: pointer\r\n`\r\n\r\nconst Header = () => {\r\n    const { theme } = useContext(ThemeContext);\r\n    const { sizes, width } = useContext(ResponsiveContext)\r\n\r\n    return (\r\n        <HeaderBase>\r\n            <HeaderWrapper theme={theme}>\r\n                <Logotype />\r\n                <Menu direction=\"horizontal\">\r\n                    <Searchbar theme={theme} />\r\n                    {width > sizes.mobile &&\r\n                        <>\r\n                            <MenuItem>components</MenuItem>\r\n                            <MenuItem>about</MenuItem>\r\n                        </>\r\n                    }\r\n                    {width <= sizes.mobile &&\r\n                        <BarsIcon icon={faBars} />\r\n                    }\r\n                </Menu>\r\n            </HeaderWrapper>\r\n        </HeaderBase>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledMain = styled.div`\r\n    min-height: 100vh;\r\n    width: 100%;\r\n\r\n    background-color: #28292D;\r\n`\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <StyledMain>\r\n            {props.children}\r\n        </StyledMain>\r\n    )\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst StyledFooter = styled.div`\r\n    height: 5rem;\r\n    width: 100%;\r\n    background-color: #4a4b58;\r\n`\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <StyledFooter>\r\n            { props.children }\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport { Header, Main, Footer } from './layout/layout.bundle'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport { ThemeContext, theme, textSizes } from \"./theme.context\"\r\n\r\nconst ThemeContextProvider = (props) => {\r\n    return (\r\n       <ThemeContext.Provider \r\n        {...props}\r\n        value={{\r\n            theme,\r\n            textSizes\r\n        }}\r\n       /> \r\n    )\r\n}\r\n\r\nexport default ThemeContextProvider","import React, { useState, useLayoutEffect } from \"react\"\r\nimport { ResponsiveContext, sizes, devices } from \"./res.context\"\r\n\r\nconst ResponsiveContextProvider = (props) => {\r\n    const [ width, setWidth ] = useState(0)\r\n\r\n    useLayoutEffect(() => {\r\n        const updateWidth = () => {\r\n            if (width !== window.innerWidth) {\r\n                setWidth(window.innerWidth)\r\n            }\r\n        }\r\n        window.addEventListener('resize', updateWidth)\r\n        updateWidth()\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', updateWidth)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ResponsiveContext.Provider \r\n        {...props}\r\n        value={{\r\n            sizes,\r\n            devices,\r\n            width\r\n        }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ResponsiveContextProvider","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ThemeContextProvider from './contexts/theme.context.provider';\r\nimport ResponsiveContextProvider from './contexts/res.context.provider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeContextProvider>\r\n      <ResponsiveContextProvider>\r\n        <App />\r\n      </ResponsiveContextProvider>\r\n    </ThemeContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}